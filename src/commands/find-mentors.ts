import { Composer, Markup, Scenes } from 'telegraf';
import { specializationStep } from '../steps/specialization';
import {
  yearsOfExperienceStep,
  validateYearsOfExperience,
} from '../steps/years-of-experience';
import tryToFindMentors from '../logic/try-to-find-mentors';
import paginate from '../logic/paginate';
import { ExtendedContext } from '../types/extended-context';
import { nameStep } from '../steps/name';

const PAGE_SIZE = 5;

const displayMentorsStep = new Composer<ExtendedContext>();

// displayMentorsStep.action('more', (ctx) => {
// console.log(ctx.wizard.steps[ctx.wizard.cursor].handler(ctx));
// console.log(ctx.scene.state);
// ctx.wizard.selectStep();
// return;
// });

displayMentorsStep.action('found', async (ctx) => {
  await ctx.reply('‚ù§Ô∏è –ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏!\n\n–£–¥–∞—á–∏!');
  return ctx.scene.leave();
});

displayMentorsStep.use(async (ctx) => {
  if (
    !ctx.extendedContextData.mentors ||
    ctx.extendedContextData.mentors.length == 0
  ) {
    const mentors = await tryToFindMentors();
    ctx.extendedContextData.mentors = mentors;
    ctx.extendedContextData.mentorsPage = 1;
  }

  if (ctx.extendedContextData.mentors.length > 0) {
    await ctx.reply(`üéâ –Ø –Ω–∞—à–µ–ª –¥–ª—è —Ç–µ–±—è —Å–ª–µ–¥—É—é—â–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:`);

    const pagination = paginate(
      ctx.extendedContextData.mentors.length,
      ctx.extendedContextData.mentorsPage,
      PAGE_SIZE,
    );

    if (ctx.extendedContextData.mentorsPage > pagination.endPage) {
      await ctx.reply(
        '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É –Ω–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –º–µ–Ω—Ç–æ—Ä–æ–≤. –ï—Å–ª–∏ –æ–Ω–∏ —É –Ω–∞—Å –ø–æ—è–≤—è—Ç—Å—è, –º—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ç–µ–±—è —É–≤–µ–¥–æ–º–∏–º.\n\n–ê –ø–æ–∫–∞ –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ç–µ–±–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–∞–π—Ç–∏ –º–µ–Ω—Ç–æ—Ä–∞ –≤ https://t.me/Nfng_bot\n\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é, –Ω–∞–∂–º–∏ /start (–ø—Ä–æ–≥—Ä–µ—Å—Å –±—É–¥–µ—Ç –ø–æ—Ç–µ—Ä—è–Ω)',
      );
      return ctx.scene.leave();
    }

    const replies = ctx.extendedContextData.mentors
      .slice(pagination.startIndex, pagination.endIndex + 1)
      .map((mentor) => {
        return ctx.reply(
          `üë§ ${mentor.name}\n–û–ø—ã—Ç: ${mentor.yearsOfExperience} –≥–æ–¥–∞`,
        );
      });

    ctx.extendedContextData.mentorsPage += 1;
    await Promise.all(replies);

    await ctx.reply(
      '–ï—Å–ª–∏ –∫—Ç–æ-—Ç–æ –∏–∑ –º–µ–Ω—Ç–æ—Ä–æ–≤ —Ç–µ–±–µ –ø–æ–¥—Ö–æ–¥–∏—Ç, –Ω–∞–∂–º–∏ ‚Äú–Ø –Ω–∞—à–µ–ª‚Äù: —è –ø–æ–¥—Å–∫–∞–∂—É —Ç–µ–±–µ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏.\n\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –µ—â–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã, –Ω–∞–∂–º–∏ ‚Äú–ü–æ–∫–∞–∂–∏ –µ—â–µ‚Äù.\n\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ –∑–∞–Ω–æ–≤–æ, –Ω–∞–∂–º–∏ /start',
      Markup.inlineKeyboard([
        Markup.button.callback('–Ø –Ω–∞—à–µ–ª', 'found'),
        Markup.button.callback('–ü–æ–∫–∞–∂–∏ –µ—â—ë', 'more'),
      ]),
    );
  } else {
    await ctx.reply(
      '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É –Ω–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –º–µ–Ω—Ç–æ—Ä–æ–≤. –ï—Å–ª–∏ –æ–Ω–∏ —É –Ω–∞—Å –ø–æ—è–≤—è—Ç—Å—è, –º—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ç–µ–±—è —É–≤–µ–¥–æ–º–∏–º.\n\n–ê –ø–æ–∫–∞ –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ç–µ–±–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–∞–π—Ç–∏ –º–µ–Ω—Ç–æ—Ä–∞ –≤ https://t.me/Nfng_bot\n\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é, –Ω–∞–∂–º–∏ /start (–ø—Ä–æ–≥—Ä–µ—Å—Å –±—É–¥–µ—Ç –ø–æ—Ç–µ—Ä—è–Ω)',
    );
    return ctx.scene.leave();
  }
});

const validateYearsOfExperienceStep = async (ctx: any) => {
  if (!validateYearsOfExperience(ctx)) {
    return ctx.reply(
      '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —á–∏—Å–ª–æ. \n\n–ï—Å–ª–∏ —É —Ç–µ–±—è –Ω–µ—Ç –æ–ø—ã—Ç–∞ —Ä–∞–±–æ—Ç—ã –≤ —ç—Ç–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏, –Ω–∞–ø–∏—à–∏ "0". ',
    );
  } else {
    ctx.wizard.next();
    return ctx.wizard.steps[ctx.wizard.cursor].handler(ctx);
  }
};

const findMentors = new Scenes.WizardScene(
  'find-mentors',
  nameStep,
  specializationStep,
  yearsOfExperienceStep,
  validateYearsOfExperienceStep,
  displayMentorsStep,
);

export default findMentors;
