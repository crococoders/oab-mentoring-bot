generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
  binaryTargets   = ["debian-openssl-1.1.x", "linux-arm64-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int                @id @default(autoincrement())
  telegramId         String             @unique @map("telegram_id")
  name               String
  specialization     Specialization
  type               Type
  availability       Availability       @default(AVAILABLE)
  verificationStatus VerificationStatus @default(PENDING)
  yearsOfExperience  Int                @map("years_of_experience")
  waitList           WaitList[]
  updatedAt          DateTime           @updatedAt @map("updated_at")
  createdAt          DateTime           @default(now()) @map("created_at")

  @@map(name: "users")
}

enum Specialization {
  BACKEND
  FRONTEND
  MOBILE
  QA
  DATASCIENCE
  DESIGN
  MANAGEMENT
}

enum Type {
  MENTOR
  MENTEE
  BOTH
}

enum VerificationStatus {
  APPROVED
  PENDING
  REJECTED
}

enum Availability {
  AVAILABLE
  UNAVAILABLE
}

model WaitList {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int  @map("user_id")

  @@map(name: "wait_list")
}
